// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WebApiProxy.Tasks.Templates
{
    using System.Linq;
    using System.Text;
    using WebApiProxy.Core.Models;
    using System.Collections.Generic;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class CSharpProxyTemplate : CSharpProxyTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"//------------------------------------------------------------------------------
//<auto-generated>
// This file is auto-generated by WebApiProxy
// Project site: https://github.com/onionhammer/WebApiProxy/
//
// Any changes to this file will be overwritten
//</auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Net;
using ");
            
            #line 23 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Namespace));
            
            #line default
            #line hidden
            this.Write(".Models;\r\n\r\n#region Models\r\n\r\nnamespace ");
            
            #line 27 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Namespace));
            
            #line default
            #line hidden
            this.Write(@".Models
{
	public class WebApiProxyResponseException : Exception
	{
		public HttpStatusCode StatusCode { get; }

		public string Content { get; }

		public WebApiProxyResponseException(HttpStatusCode statusCode, string content)
			: base($""A {statusCode} ({(int)statusCode} http exception occurred. See content for response body."")
		{
			StatusCode = statusCode;
			Content    = content;
		}
	}
	");
            
            #line 42 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 
	foreach(var model in Configuration.Metadata.Models.Where(m => m.Type.Equals("class"))) { 
            
            #line default
            #line hidden
            this.Write("\t\r\n\t/// <summary>\r\n\t/// ");
            
            #line 45 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t/// </summary>\r\n\tpublic partial class ");
            
            #line 47 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\t#region Constants\r\n");
            
            #line 50 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var constantItem in model.Constants) { 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// <summary>\r\n\t\t/// ");
            
            #line 53 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n\t\tpublic const ");
            
            #line 55 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 55 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 55 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Value));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 56 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#endregion\r\n\r\n\t\t#region Properties\r\n");
            
            #line 61 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var propertyItem in model.Properties) { 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// <summary>\r\n\t\t/// ");
            
            #line 64 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyItem.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n\t\tpublic virtual ");
            
            #line 66 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyItem.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 66 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyItem.Name));
            
            #line default
            #line hidden
            this.Write(" { get; set; }\r\n");
            
            #line 67 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#endregion\r\n\t}");
            
            #line 70 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"

}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 74 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var model in Configuration.Metadata.Models.Where(m => m.Type.Equals("enum"))) 
   { 
            
            #line default
            #line hidden
            this.Write("\t/// <summary>\r\n\t/// ");
            
            #line 77 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t/// </summary>\r\n\tpublic enum ");
            
            #line 79 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\t");
            
            #line 81 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var constantItem in model.Constants) { 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// <summary>\r\n\t\t/// ");
            
            #line 84 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n\t\t");
            
            #line 86 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 86 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constantItem.Value));
            
            #line default
            #line hidden
            this.Write(",\r\n\t\t");
            
            #line 87 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t}");
            
            #line 89 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"

}
            
            #line default
            #line hidden
            this.Write("\r\n}\r\n\r\n#endregion\r\n\r\n#region Clients\r\n\r\nnamespace ");
            
            #line 98 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Namespace));
            
            #line default
            #line hidden
            this.Write(".Clients\r\n{\r\n\t/// <summary>\r\n\t/// Client base class.\r\n\t/// </summary>\r\n\tpublic ab" +
                    "stract partial class ClientBase : IDisposable\r\n\t{\r\n\t\t/// <summary>\r\n\t\t/// Gets t" +
                    "he HttpClient.\r\n\t\t/// </summary>\r\n\t\tpublic HttpClient HttpClient { get; }\r\n\r\n\t\t/" +
                    "// <summary>\r\n\t\t/// Initializes a new instance of the <see cref=\"ClientBase\"/> c" +
                    "lass.\r\n\t\t/// </summary>\r\n\t\tprotected ClientBase(string apiRoot)\r\n\t\t{\r\n\t\t\tHttpCli" +
                    "ent = new HttpClient()\r\n\t\t\t{\r\n\t\t\t\tBaseAddress = new Uri(apiRoot)\r\n\t\t\t};\r\n\t\t}\r\n\r\n" +
                    "\t\t/// <summary>\r\n\t\t/// Initializes a new instance of the <see cref=\"ClientBase\"/" +
                    "> class.\r\n\t\t/// </summary>\r\n\t\t/// <param name=\"handler\">The handler.</param>\r\n\t\t" +
                    "/// <param name=\"disposeHandler\">if set to <c>true</c> [dispose handler].</param" +
                    ">\r\n\t\tprotected ClientBase(HttpMessageHandler handler, bool disposeHandler = true" +
                    ", string apiRoot = null)\r\n\t\t{\r\n\t\t\tHttpClient = new HttpClient(handler, disposeHa" +
                    "ndler)\r\n\t\t\t{\r\n\t\t\t\tBaseAddress = new Uri(apiRoot)\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary" +
                    ">\r\n\t\t/// Ensures that response has a valid (200 - OK) status code\r\n\t\t/// </summa" +
                    "ry>\r\n\t\tpublic virtual async Task EnsureSuccessAsync(HttpResponseMessage response" +
                    ")\r\n\t\t{\t\t\t\r\n\t\t\tif (response.IsSuccessStatusCode)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar content =" +
                    " await response.Content.ReadAsStringAsync();\r\n\t\t\tthrow new WebApiProxyResponseEx" +
                    "ception(response.StatusCode, content);\r\n\t\t}\r\n\r\n\t\t/// <summary>\r\n\t\t/// Encode the" +
                    " input parameter as a string\r\n\t\t/// </summary>\r\n\t\tprotected string EncodeParam<T" +
                    ">(T value) =>\r\n\t\t\tvalue == null\r\n\t\t\t\t ? string.Empty\r\n\t\t\t\t : System.Net.WebUtili" +
                    "ty.UrlEncode(value.ToString());\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Encode the input par" +
                    "ameter as a string\r\n\t\t/// </summary>\r\n\t\tprotected string EncodeParam(DateTime va" +
                    "lue) =>\r\n\t\t\tSystem.Net.WebUtility.UrlEncode(value.ToString(\"s\"));\r\n\t\t\r\n\t\t/// <su" +
                    "mmary>\r\n\t\t/// Encode the input parameter as a string\r\n\t\t/// </summary>\r\n\t\tprotec" +
                    "ted string EncodeParam(DateTimeOffset value) =>\r\n\t\t\tSystem.Net.WebUtility.UrlEnc" +
                    "ode(value.ToString(\"s\"));\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Releases the unmanaged res" +
                    "ources and disposes of the managed resources.       \r\n\t\t/// </summary>\r\n\t\tprotec" +
                    "ted virtual void Dispose(bool disposing)\r\n\t\t{\r\n\t\t\tif (disposing && HttpClient !=" +
                    " null)\r\n\t\t\t\tHttpClient.Dispose();\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Releases the " +
                    "unmanaged resources and disposes of the managed resources.       \r\n\t\t/// </summa" +
                    "ry>\r\n\t\tpublic void Dispose()\r\n\t\t{\r\n\t\t\tDispose(true);\r\n\t\t\tGC.SuppressFinalize(thi" +
                    "s);\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Destructor\r\n\t\t/// </summary>\r\n\t\t~ClientBase" +
                    "() \r\n\t\t{\r\n\t\t\tDispose(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// Helper class to ac" +
                    "cess all clients at once\r\n\t/// </summary>\r\n\tpublic partial class WebApiClients\r\n" +
                    "\t{\r\n");
            
            #line 198 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 199 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            
            #line 199 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.ClientSuffix));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 199 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(" { get; }\r\n");
            
            #line 200 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\tprotected IEnumerable<ClientBase> Clients\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n");
            
            #line 206 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tyield return ");
            
            #line 207 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 208 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic WebApiClients(Uri apiRootUri = null)\r\n\t\t{\r\n\t\t\tvar apiRoot =" +
                    " apiRootUri?.AbsoluteUri\r\n\t\t\t\t\t   ?? \"");
            
            #line 215 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Metadata.Host));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n");
            
            #line 217 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 218 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 218 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            
            #line 218 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.ClientSuffix));
            
            #line default
            #line hidden
            this.Write("(apiRoot);\r\n");
            
            #line 219 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\tpublic void SetAuthentication(AuthenticationHeaderValue auth)\r\n\t\t{\r\n");
            
            #line 224 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 225 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(".HttpClient.DefaultRequestHeaders.Authorization = auth;\r\n");
            
            #line 226 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t\r\n\t\tprotected virtual void Dispose(bool disposing)\r\n\t\t{\r\n\t\t\tif (disposing)" +
                    "\r\n\t\t\t{\r\n");
            
            #line 233 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 234 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(".Dispose();\r\n");
            
            #line 235 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void Dispose()\r\n\t\t{\r\n\t\t\tDispose(true);\r\n\t\t\tGC.SuppressFinal" +
                    "ize(this);\r\n\t\t}\r\n\r\n\t\t~WebApiClients() \r\n\t\t{\r\n\t\t\tDispose(false);\r\n\t\t}\r\n\t}\r\n\r\n");
            
            #line 251 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var definition in Configuration.Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t/// <summary>\r\n\t/// ");
            
            #line 253 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t/// </summary>\r\n\tpublic partial class ");
            
            #line 255 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            
            #line 255 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.ClientSuffix));
            
            #line default
            #line hidden
            this.Write(" : ClientBase\r\n\t{\r\n\t\t#region Constructors\r\n\r\n\t\t/// <summary>\r\n\t\t/// ");
            
            #line 260 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n\t\tpublic ");
            
            #line 262 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            
            #line 262 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.ClientSuffix));
            
            #line default
            #line hidden
            this.Write("(string apiRoot = \"");
            
            #line 262 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Metadata.Host));
            
            #line default
            #line hidden
            this.Write("\") \r\n\t\t\t: base(apiRoot)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t/// <summary>\r\n\t\t/// ");
            
            #line 268 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n\t\tpublic ");
            
            #line 270 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            
            #line 270 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.ClientSuffix));
            
            #line default
            #line hidden
            this.Write("(HttpMessageHandler handler, bool disposeHandler = true, string apiRoot = \"");
            
            #line 270 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Configuration.Metadata.Host));
            
            #line default
            #line hidden
            this.Write("\")\r\n\t\t\t: base(handler, disposeHandler, apiRoot)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t#endregion\r\n\r\n\t\t#r" +
                    "egion Methods\r\n\r\n");
            
            #line 279 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var method in definition.ActionMethods) 
   { 
		var allParameters       = method.UrlParameters;
		var bodyParameterString = ", default(HttpResponseMessage)";
		var concreteReturnType  = method.ReturnType.ToConcrete();
		var parameterList       = "";

		if (method.BodyParameter != null)
		{
			allParameters		= allParameters.Concat(new [] { method.BodyParameter });
			bodyParameterString = ", " + method.BodyParameter.Name;
		}

		if (allParameters.Any())
		{
			var q = allParameters.Where(m => m != null)
								 .Select(m => m.Type + " " + m.Name);

			if (q != null)
				parameterList = string.Join(", ", q.ToArray());
		}

		var postOrPutOrPatch = method.Type.ToTitle() == "Post" || method.Type.ToTitle() == "Put" || method.Type.ToTitle() == "Patch";
		var pattern          = new Regex(@"\{(?<name>\w+)\}", RegexOptions.Compiled);
		var url              = "$\"" + pattern.Replace(method.Url, "{EncodeParam(${name})}") + "\"";

            
            #line default
            #line hidden
            
            #line 305 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 if (String.IsNullOrEmpty(concreteReturnType)) { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n\t\t/// ");
            
            #line 307 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n");
            
            #line 309 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var p in method.UrlParameters) { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <param name=\"");
            
            #line 310 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.Name));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 310 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 311 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t/// <returns></returns>\r\n\t\tpublic virtual async Task ");
            
            #line 313 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name.StripAsync()));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 313 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterList));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t{\r\n\t\t\tvar result = await HttpClient.");
            
            #line 315 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Type.ToTitle()));
            
            #line default
            #line hidden
            
            #line 315 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch ? "AsJson" : ""));
            
            #line default
            #line hidden
            this.Write("Async");
            
            #line 315 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch && method.BodyParameter != null ? "<" + method.BodyParameter.Type + ">" : ""));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 315 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(url));
            
            #line default
            #line hidden
            
            #line 315 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch ? bodyParameterString:""));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\r\n\t\t\tawait EnsureSuccessAsync(result);\r\n\t\t}\r\n\r\n");
            
            #line 320 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n\t\t/// ");
            
            #line 322 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n");
            
            #line 324 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 foreach(var p in method.UrlParameters) { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <param name=\"");
            
            #line 325 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.Name));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 325 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.Description.ToSummary()));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 326 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t/// <returns></returns>\r\n\t\tpublic virtual async Task<");
            
            #line 328 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(concreteReturnType));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 328 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name.StripAsync()));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 328 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterList));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t{\r\n\t\t\tvar result = await HttpClient.");
            
            #line 330 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Type.ToTitle()));
            
            #line default
            #line hidden
            
            #line 330 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch ? "AsJson" : ""));
            
            #line default
            #line hidden
            this.Write("Async");
            
            #line 330 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch && method.BodyParameter != null ? "<" + method.BodyParameter.Type + ">" : ""));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 330 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(url));
            
            #line default
            #line hidden
            
            #line 330 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postOrPutOrPatch ? bodyParameterString:""));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t \r\n\t\t\tawait EnsureSuccessAsync(result);\r\n\t\t\t\t \r\n\t\t\treturn await result.Con" +
                    "tent.ReadAsAsync<");
            
            #line 334 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(concreteReturnType));
            
            #line default
            #line hidden
            this.Write(">();\r\n\t\t}\r\n\r\n");
            
            #line 337 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 }
} 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\t}\r\n");
            
            #line 341 "D:\Development\WebApiProxy\WebApiProxy.Tasks\Templates\CSharpProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("}\r\n\r\n#endregion");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class CSharpProxyTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
